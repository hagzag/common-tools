variables:
  AWS_REGION: "eu-west-1"
  AWS_PROFILE: "oidc"
  ROLE_ARN: "arn:aws:iam::177788131692:role/gitlab-ci-oidc-role"
  TERRAGRUNT_WORKING_DIR: "."
  ENV_DIR: ./astoria-cyber-main/eu-west-1/playground

stages:
  - init
  - plan
  - apply

image: 
  name: registry.gitlab.com/hagzag/common-tools:v1.0.1
  entrypoint: ['/usr/bin/env']

.id_tokens: &id
  GITLAB_OIDC_TOKEN:
    aud: https://gitlab.com

.aws_profile_setup:
  before_script: &bs
    - mkdir -p ~/.aws
    - echo "${GITLAB_OIDC_TOKEN}" > /tmp/web_identity_token
    - |
      cat <<EOF > ~/.aws/config
      [profile ${AWS_PROFILE}]
      role_arn = ${ROLE_ARN}
      web_identity_token_file = /tmp/web_identity_token
      EOF

# assume_role:
#   stage: .pre
#   # Must match EXACTLY with AWS IAM OIDC provider
#   before_script: *bs
#   id_tokens: *id
#   script:
#     - aws sts get-caller-identity --profile oidc  # First verification
#     - aws s3 ls --profile oidc

# test_oidc:
#   stage: deploy
#   needs: ["assume_role"]
#   before_script: *bs
#   id_tokens: *id
#   script:
#     - aws sts get-caller-identity --profile oidc

# run on merger requests and all branches which aren't main
terragrunt_init:
  image: registry.gitlab.com/hagzag/common-tools:v1.0.1
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH != "main"'
  stage: init
  id_tokens: *id
  before_script: *bs
  variables:
    TG_CMD: init
  script:
    - aws sts get-caller-identity --profile ${AWS_PROFILE}
    - terragrunt run-all ${TG_CMD} --terragrunt-non-interactive --terragrunt-working-dir ${ENV_DIR}

# terragrunt_plan:
#   stage: plan
#   id_tokens: *id
#   needs: ["terragrunt_init"]
#   before_script: *bs
#   variables:
#     TG_CMD: plan
#   script:
#     - terragrunt run-all plan --terragrunt-non-interactive --terragrunt-working-dir ${ENV_DIR}
#   rules:
#     - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
#     - if: '$CI_COMMIT_BRANCH != "main"'

# # ron only on merge_reques and push to main
# terragrunt_apply:
#   stage: apply
#   id_tokens: *id
#   needs: ["terragrunt_plan"]
#   before_script: *bs
#   script:
#     - terragrunt run-all apply --terragrunt-non-interactive --terragrunt-working-dir ${ENV_DIR} -auto-approve
#   rules:
#     - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
#     - if: '$CI_COMMIT_BRANCH == "main"'
#     - if: '$CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE == "push"'
